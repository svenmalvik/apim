<policies>
    <inbound> 
        {% with calls=5, renewal=5 %}
            {% include '_includes/_rateLimit.policy.xml' %}
        {% endwith %}
        {% include '_includes/_isVippsDown.policy.xml' %}
        <set-variable name="ReqInTime" value="@(System.DateTime.Now)" />
        <set-header name="X-App-Type" exists-action="override">
            <value>VIPPS</value>
        </set-header>
        {% include '_includes/_tokenValidation.policy.xml' %}
        <set-variable name="tempRequestBody" value="@{ return context.Variables.ContainsKey(&quot;tempRequestBody&quot;) ? (string)context.Variables[&quot;tempRequestBody&quot;] : (context.Request.Body != null ? context.Request.Body.As&lt;string&gt;(true) : &quot;Request body is empty&quot;); }" />
        <set-header name="X-Auth-Source" exists-action="override">
            <value>APIM</value>
        </set-header>
        <set-header name="X-Global-Context-Id" exists-action="override">
            <value>@(context.RequestId.ToString())</value>
        </set-header>
        <set-header name="X-APIM-Secret-Key" exists-action="override">
            <value>{{APIM-SecretKey}}</value>
        </set-header>
        <send-one-way-request mode="copy">
            <set-url>{{BaseWAFAppgatewayUrl}}</set-url>
        </send-one-way-request>
        {% with param_1="IsPeDown" %}
            {% include '_includes/_mock.policy.xml' %}
        {% endwith %}
        <set-backend-service base-url="{{AKSBackendUrl}}/payments/v1" />
    </inbound>
    <backend>
        {% include '_includes/_requestForwardTime.policy.xml' %}
    </backend>
    <outbound>
        {% include '_includes/_unsuccessfullResponseLogging.policy.xml' %}
    </outbound>
    <on-error />
</policies>